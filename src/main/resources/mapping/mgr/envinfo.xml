<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.pr.sepp.env.info.dao.EnvInfoDAO">

	<select id="envInfoQuery" resultType="com.pr.sepp.env.info.model.EnvInfo" parameterType="java.util.HashMap">
		select
			e.id,
			e.product_id as productId,
			e.branch_id as branchId,
			e.env_type as envType,
			et.type_name as envTypeName,
		    pb.branch_name as branchName,
			e.instance,
			e.env_url as envUrl,
			e.job_name as jobName,
			e.job_params as jobParams,
			e.qr_code as qrCode
		from
			sepp_environment e,
			sepp_env_type et,
		    sepp_product_branch pb
		where et.type_id = e.env_type
			and pb.branch_id = e.branch_id
		<choose>
			<when test="id!=null and id!=''">
				and e.id = #{id}
			</when>
			<otherwise>
				<if test="productId!=null and productId!=''">
					and e.product_id = #{productId}
				</if>
				<if test="branchId!=null and branchId!=''">
					and e.branch_id = #{branchId}
				</if>
				<if test="envType!=null and envType!=''">
					and e.env_type = #{envType}
				</if>
				<if test="instance!=null and instance!=''">
					and e.instance = #{instance}
				</if>
			</otherwise>
		</choose>
	</select>

	<select id="instanceQuery" resultType="java.lang.String">
		select
			distinct instance
		from
			sepp_build_instance
		where product_id = #{productId}

	</select>

	<insert id="envInfoCreate" useGeneratedKeys="true" parameterType="com.pr.sepp.env.info.model.EnvInfo">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select last_insert_id()
		</selectKey>
		insert into
			sepp_environment(product_id, branch_id, env_type, instance, env_url, job_name, job_params, qr_code)
		values
			(#{productId}, #{branchId}, #{envType}, #{instance}, #{envUrl}, #{jobName}, #{jobParams}, #{qrCode})
	</insert>

	<update id="envInfoUpdate" parameterType="com.pr.sepp.env.info.model.EnvInfo">
		update
			sepp_environment
		set
			branch_id = #{branchId},
			env_type = #{envType},
			instance = #{instance},
			env_url = #{envUrl},
			job_name = #{jobName},
			job_params = #{jobParams},
			qr_code = #{qrCode}
		where id = #{id}
	</update>

	<delete id="envInfoDelete" parameterType="java.lang.Integer">
		delete from
			sepp_environment
		where
			id = #{id}
	</delete>

	<select id="findEnvInfo" resultType="com.pr.sepp.env.info.model.EnvInfo">
		select
			id,
			product_id as productId,
			branch_id as branchId,
			env_type as envType,
			instance,
			env_url as envUrl,
			job_name as jobName,
			job_params as jobParams,
			qr_code as qrCode
		from
			sepp_environment
		where
			product_id = #{productId}
		    and branch_id=#{branchId}
			and env_type=#{envType}
			and instance=#{instance}
	</select>

	<select id="selectAllJobEnvInfo" resultType="com.pr.sepp.env.info.model.EnvInfo">
		SELECT id,
               product_id as productId,
               branch_id as branchId,
               env_type as envType,
               instance,
               env_url as envUrl,
               job_name as jobName,
               job_params as jobParams,
               qr_code as qrCode
		FROM sepp_environment WHERE job_name!=''
	</select>

	<select id="findEnvInfos" resultType="com.pr.sepp.env.info.model.EnvInfo">
		select
			id,
			product_id as productId,
			branch_id as branchId,
			env_type as envType,
			instance,
			env_url as envUrl,
			job_name as jobName,
			job_params as jobParams,
			qr_code as qrCode
		from
			sepp_environment
		where product_id = #{productId}
		  and branch_id=#{branchId}
		  and env_type=#{envType}
	</select>
</mapper>
