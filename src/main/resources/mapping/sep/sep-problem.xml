<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.pr.sepp.sep.problem.dao.ProblemDAO">

	<select id="problemQuery"  resultType="com.pr.sepp.sep.problem.model.Problem">
		select
			p.id,
			p.status,
			p.priority,
			p.influence,
			p.submitter,
			p.responser,
			p.type_first                               as typeFirst,
			p.type_second                              as typeSecond,
			p.resolve_method                           as resolveMethod,
			p.trans_id                                 as transId,
			p.product_id                               as productId,
			p.module_id                                as moduleId,
			p.summary,
			p.detail,
			p.attachment,
			date_format(p.submit_time, '%Y-%m-%d %T')  AS submitTime,
			date_format(p.expect_resolve_time, '%Y-%m-%d %T') AS expectResolveTime,
			date_format(p.resolve_time, '%Y-%m-%d %T') AS resolveTime,
			date_format(p.close_time, '%Y-%m-%d %T')   AS closeTime,
			p.resolve_cost                             as resolveCost,
			p.improve_one                              as improveOne,
			p.improve_two                              as improveTwo,
			date_format(p.improve_plan_to, '%Y-%m-%d') AS improvePlanTo,
			p.improve_detail                           as improveDetail,
			ps.status_name                             AS statusName,
			dp.priority_name                           AS priorityName,
			di.influence_name                          AS influenceName,
			u1.user_name                               AS submitterName,
			u2.user_name                               AS responserName,
			pt.type_desc                               AS typeFirstName,
			pt.sub_desc                                AS typeSecondName,
			pr.method_name                             AS resolveMethodName,
			pm.module_name                             AS moduleName,
			pi.type_desc                               AS improveOneName,
			pi.sub_desc                                AS improveTwoName,
			p.refuse_reason                            AS refuseReason
		from
			sepp_problem p,
			sepp_problem_type pt,
			sepp_problem_status ps,
			sepp_problem_resolve pr,
			sepp_problem_improve pi,
			sepp_defect_priority dp,
			sepp_defect_influence di,
			sepp_user u1,
			sepp_user u2,
			sepp_prod_module pm
		where p.product_id = #{productId}
			and p.status = ps.status_id
			and p.priority = dp.priority_id
			and p.influence = di.influence_id
			and p.submitter = u1.user_id
			and p.responser = u2.user_id
			and p.type_first = pt.type
			and p.type_second = pt.sub_type
			and p.resolve_method = pr.method_id
			and p.module_id = pm.module_id
			and ifnull(p.improve_one,0) = pi.type 
			and ifnull(p.improve_two,0) = pi.sub_type 
			<choose>
				<when test="id!=null and id!=''">
					and p.id = #{id} 
				</when>
				<when test="transId!=null and transId!=''">
					and p.trans_id = #{transId}
				</when>
				<otherwise>
					<if test="submitter!=null and submitter!=''">
						and p.submitter=#{submitter}
					</if>
					<if test="responser!=null and responser!=''">
						and p.responser=#{responser}
					</if>
					<if test="sts!=null">
						and p.status in
						<foreach collection="sts" index="index" item="status" open="(" separator="," close=")">
							#{status}
						</foreach>
					</if>
					<if test="priority!=null and priority!=''">
						and p.priority = #{priority} 
					</if>
					<if test="influence!=null and influence!=''">
						and p.influence=#{influence}
					</if>
					<if test="typeFirst!=null and typeFirst!=''">
						and p.type_first=#{typeFirst}
					</if>
					<if test="typeSecond!=null and typeSecond!=''">
						and p.type_second=#{typeSecond}
					</if>
					<if test="transId!=null and transId!=''">
						and p.trans_id=#{transId}
					</if>
					<if test="moduleId!=null and moduleId!=''">
						and p.module_id=#{moduleId}
					</if>
					<if test="submitTimeBegin!=null and submitTimeBegin!=''">
						<![CDATA[and p.submit_time >= #{submitTimeBegin}]]>
					</if>
					<if test="submitTimeEnd!=null and submitTimeEnd!=''">
						<![CDATA[and p.submit_time <= #{submitTimeEnd}]]>
					</if>
					<if test="resolveTimeBegin!=null and resolveTimeBegin!=''">
						<![CDATA[and p.resolve_time >= #{resolveTimeBegin}]]>
					</if>
					<if test="resolveTimeEnd!=null and resolveTimeEnd!=''">
						<![CDATA[and p.resolve_time <= #{resolveTimeEnd}]]>
					</if>
					<if test="closeTimeBegin!=null and closeTimeBegin!=''">
						<![CDATA[and p.close_time >= #{closeTimeBegin}]]>
					</if>
					<if test="closeTimeEnd!=null and closeTimeEnd!=''">
						<![CDATA[and p.close_time <= #{closeTimeEnd}]]>
					</if>
				</otherwise>
			</choose>
			order by p.id desc
	</select>

	<insert id="problemCreate" useGeneratedKeys="true"  parameterType="com.pr.sepp.sep.problem.model.Problem">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			select last_insert_id()
		</selectKey>
		insert into
			sepp_problem(status, priority, influence, submitter, responser, type_first, type_second, resolve_method,
			trans_id, product_id, module_id, summary, detail, submit_time, expect_resolve_time, attachment)
		values(#{status}, #{priority}, #{influence}, #{submitter}, #{responser}, #{typeFirst}, #{typeSecond}, #{resolveMethod},
			#{transId}, #{productId}, #{moduleId}, #{summary}, #{detail}, #{submitTime}, #{expectResolveTime}, #{attachment})
	</insert>

	<update id="problemUpdate"  parameterType="com.pr.sepp.sep.problem.model.Problem">
		update
			sepp_problem
		set
			<if test="resolveMethod!=null and resolveMethod!=''">
				resolve_method=#{resolveMethod},
			</if>
			<if test="closeTime!=null and closeTime!=''">
				close_time=#{closeTime},
			</if>
			<if test="transId!=null and transId!=''">
				trans_id=#{transId},
			</if>
			<if test="summary!=null and summary!=''">
				summary=#{summary},
			</if>
			<if test="resolveCost!=null and resolveCost!=''">
				resolve_cost=#{resolveCost},
			</if>
			<choose>
				<when test="resolveTime!=null and resolveTime!=''">
					resolve_time=#{resolveTime},
				</when>
				<otherwise>
					resolve_time=null,
				</otherwise>
			</choose>
			<choose>
				<when test="improvePlanTo!=null and improvePlanTo!=''">
					improve_plan_to=#{improvePlanTo},
				</when>
				<otherwise>
					improve_plan_to=null,
				</otherwise>
			</choose>
			<if test="improveOne!=null and improveOne!=''">
				improve_one=#{improveOne},
			</if>
			<if test="improveTwo!=null and improveTwo!=''">
				improve_two=#{improveTwo},
			</if>
			<if test="improveDetail!=null and improveDetail!=''">
				improve_detail=#{improveDetail},
			</if>
			detail=#{detail},
			expect_resolve_time=#{expectResolveTime},
			status=#{status},
			priority=#{priority},
			responser=#{responser},
			module_id=#{moduleId},
			influence=#{influence},
			type_first=#{typeFirst},
			type_second=#{typeSecond},
			attachment=#{attachment},
			status=#{status}
		where id=#{id}
	</update>

	<update id="problemRelate"  parameterType="java.util.HashMap">
		update
			sepp_problem
		set
			trans_id=#{transId}
		where id=#{id}
	</update>

	<update id="problemRefuse"  parameterType="com.pr.sepp.sep.problem.model.ProblemRefuse">
		update
			sepp_problem
		set
			status=#{status},
			type_first=#{typeFirst},
			type_second=#{typeSecond},
			resolve_method=#{resolveMethod},
			refuse_reason=#{refuseReason},
			close_time=#{closeTime}
		where id=#{id}
	</update>

</mapper>
